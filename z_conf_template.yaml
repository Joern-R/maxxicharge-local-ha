######################################################################################################
# Maxxicharge Lokales API - FW Release 0.43Beta
######################################################################################################

######################################################################################################
# Hinweise
# 1. Die unten verwendete WebHook ID ist ein Beispiel und kann beliebig geändert werden. Die API-Route,
#    mit der Id wäre dann "http://homeassistant.local:8123/api/webhook/maxxicharge_local_id" wenn Ihr
#    die URL eures Homeassistant System nicht geändert habt, ansonsten ist dies entsprechend anzupassen.
#    Wenn sich der Homeassistant nicht über die .local URL, sondern nur über die IP Adresse aufrufen
#    lässt muss in der URL natürlich auch die IP Adresse verwendet werden.
# 2. In der Homeassistant Dokumentation wird für den WebHook Namen grundsätzlich eine nicht leicht
#    zu erratenden Buchstaben/Zahlenkombination empfohlen. Hier im Beispiel wurde aus Gründen besserer
#    Lesbarkeit eine einfacher Name gewählt 
# 3. Die Namen der Sensoren können natürlich an beliebig angepasst werden. Jeder hat da andere 
#    Präferenzen
# 4. Es wird der Detail Ladestand für genau 1 Batterie ausgelesen. Wer mehr MaxxiCharge Batterien
#    im Einsatz hat muss entsprechend weitere Sensoren ergänzen
#
#######################################################################################################

# Diese Konfigurationsdatei muss per "include" Befehl in die "Configuration.YAML" eingebunden werden.
# Wer weitere "template" Konfigurationen in HA verwendet, muss die Konfigurationen nach seinem eigenen
# Bedarf zusammenführen.


- trigger:
    - platform: webhook
      webhook_id: maxxicharge_local_id
      allowed_methods: [POST]
      local_only: true
  sensor:
    # Device ID / Name - does not change
    - name: "Maxxicharge1_DeviceId"
      unique_id: "Maxxicharge1_DeviceId"
      icon: mdi:information-outline
      state: "{{ trigger.json.deviceId }}"
    # WIFI signal strength
    - name: "Maxxicharge1 WiFi Signalstärke dBm"
      unique_id: "Maxxicharge1-WiFi-dBm"
      device_class: signal_strength
      state_class: measurement
      icon: mdi:wifi
      state: "{{ trigger.json.wifiStrength }}"
      unit_of_measurement: dBm
    # Power delivered by MaxxiCharge to the circut
    - name: "Maxxicharge1 CCU Leistung"
      unique_id: "Maxxicharge1-CCU_Gesamtleistung"
      device_class: power
      state_class: measurement
      icon: mdi:power-plug-battery-outline
      state: "{{ trigger.json.Pccu | float (0) | round(3) }}"
      unit_of_measurement: W
    # Power meter reading by MaxxiCharge
    - name: "Maxxicharge1 E-Zaehler Leistungswert"
      unique_id: "Maxxicharge1-E-Leistung"
      device_class: power
      state_class: measurement
      icon: mdi:gauge
      state: "{{ trigger.json.Pr | float(0) | round (3) }}"
      unit_of_measurement: W
    # Total solar power delivered to the MaxxiCharge
    - name: "Maxxicharge1 PV Leistung"
      unique_id: "Maxxicharge1-PV_Leistung"
      device_class: power
      state_class: measurement
      icon: mdi:solar-power-variant
      state: "{{ trigger.json.PV_power_total  | float(0) | round (3) }}"
      unit_of_measurement: W
    # Firmware version of MaxxiCharge
    - name: "Maxxicharge1 CCU Version"
      unique_id: "Maxxicharge1_CCU_Version"
      icon: mdi:information-outline
      state: "{{ trigger.json.firmwareVersion }}"
    # Solar power used to charge battery
    - name: "Maxxicharge1 Batterie Leistung"
      unique_id: "Maxxicharge1-Batterie_Leistung"
      state: "{{  (trigger.json.PV_power_total | float (0) | round(3) - trigger.json.Pccu | float (0) | round(3)) | round(3) }}"
      unit_of_measurement: W
      device_class: power
      state_class: measurement
      icon: mdi:battery-charging-outline
    # Battery state of charge in %
    - name: "Maxxicharge1 Ladestand %"
      unique_id: "Maxxicharge1-Ladestand"
      device_class: battery
      state_class: measurement
      icon: >
        mdi:battery-{{ (trigger.json.SOC | int(0) / 10) | round(0, 0, 0) * 10 }}
      state: "{{ trigger.json.SOC }}"
      unit_of_measurement: "%"
    # Battery state of charge in Wh (Battery 1)
    - name: "Maxxicharge1 Ladestand Detail"
      unique_id: "Maxxicharge1-LadestandDetail"
      icon: mdi:file-document-outline
      unit_of_measurement: "Wh"
      state: "{{ trigger.json.batteriesInfo[0].batteryCapacity | float (0) | round(3)}}"
    
    # Falls mehr als eine Batterie an der CCU angeschlossen ist, werden weitere Detaildaten 
    # geliefert - diese müssen als eigene Sensoren in der nachfolgend dokumentierten Form
    # in der Konfiguration definiert werden.

    # Um Systeme mit nur einer Batterie nicht zu stören, sind ist die Konfiguration der 
    # bespielhaft aufgeführten Konfiguration für Batterie 2 und Batterie 3 hier "auskommentiert"
    # und kann bei Bedarf durch Entfernung des Kommentarzeichens "#" aktiviert werden.
    # Dabei bitte auf korrekte Einrückungen achten.

    # Battery state of charge in Wh (Battery 2)
    #- name: "Maxxicharge1 Ladestand Detail 2"
    #  unique_id: "Maxxicharge1-LadestandDetail2"
    #  icon: mdi:file-document-outline
    #  unit_of_measurement: "Wh"
    #  state: "{{ trigger.json.batteriesInfo[1].batteryCapacity | float (0) | round(3)}}"
    # Battery state of charge in Wh (Battery 3)
    #- name: "Maxxicharge1 Ladestand Detail 3"
    #  unique_id: "Maxxicharge1-LadestandDetail3"
    #  icon: mdi:file-document-outline
    #  unit_of_measurement: "Wh"
    #  state: "{{ trigger.json.batteriesInfo[2].batteryCapacity | float (0) | round(3)}}"

      
